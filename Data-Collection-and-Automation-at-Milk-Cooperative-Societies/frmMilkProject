#PBFORMS CREATED V1.51
'------------------------------------------------------------------------------
' The first line in this file is a PB/Forms metastatement.
' It should ALWAYS be the first line of the file. Other
' PB/Forms metastatements are placed at the beginning and
' end of "Named Blocks" of code that should be edited
' with PBForms only. Do not manually edit or delete these
' metastatements or PB/Forms will not be able to reread
' the file correctly.  See the PB/Forms documentation for
' more information.
' Named blocks begin like this:    #PBFORMS BEGIN ...
' Named blocks end like this:      #PBFORMS END ...
' Other PB/Forms metastatements such as:
'     #PBFORMS DECLARATIONS
' are used by PB/Forms to insert additional code.
' Feel free to make changes anywhere else in the file.
'------------------------------------------------------------------------------

#COMPILE EXE "MILKDATA.EXE"
#DIM ALL

'------------------------------------------------------------------------------
'   ** Includes **
'------------------------------------------------------------------------------
#PBFORMS BEGIN INCLUDES
#IF NOT %DEF(%WINAPI)
    #INCLUDE "WIN32API.INC"
#ENDIF
#INCLUDE "PBForms.INC"
#PBFORMS END INCLUDES
'------------------------------------------------------------------------------

'------------------------------------------------------------------------------
'   ** Constants **
'------------------------------------------------------------------------------
#PBFORMS BEGIN CONSTANTS
%IDC_BTNEDITDATA = 1002
%IDC_BTNEXIT     = 1004
%IDC_BTNNEWDATA  = 1001
%IDC_BTNREPORTS  = 1003
%IDC_LABEL1      = 1005
%IDD_DIALOG1     =  101
%IDC_TEXTBOX_COMPORT =1100
%IDC_LABEL10 = 1110
%IDC_TEXTBOX_RFID=1120
#PBFORMS END CONSTANTS
'------------------------------------------------------------------------------

'------------------------------------------------------------------------------
'   ** Declarations **
'------------------------------------------------------------------------------
DECLARE CALLBACK FUNCTION ShowDIALOG1Proc()
DECLARE FUNCTION ShowDIALOG1(BYVAL hParent AS DWORD) AS LONG
#PBFORMS DECLARATIONS
'------------------------------------------------------------------------------
#INCLUDE ONCE "Globals.inc"
#INCLUDE ONCE "edit.inc"
#INCLUDE ONCE "frmNewdata.inc"
'#INCLUDE "frmReports.inc"




'------------------------------------------------------------------------------

'------------------------------------------------------------------------------


'------------------------------------------------------------------------------
'   ** Main Application Entry Point **
'------------------------------------------------------------------------------
FUNCTION PBMAIN()

    THREAD CREATE  RFIDThreadFunction(0) TO hThread1
    ShowDIALOG1 %HWND_DESKTOP
END FUNCTION
'------------------------------------------------------------------------------

'------------------------------------------------------------------------------
'   ** CallBacks **
'------------------------------------------------------------------------------
CALLBACK FUNCTION btnNewDataCallback
NewDataFunction
    lDestinationTextBox=%IDC_TEXTBOX_RFID
    hDestinationFormHandle=hMainDialogHandle

END FUNCTION
'------------------------------------------------------------------------------
CALLBACK FUNCTION btnEditDataCallback
EditDataFunction
END FUNCTION
'------------------------------------------------------------------------------
CALLBACK FUNCTION btnReportsCallback

END FUNCTION
'------------------------------------------------------------------------------
CALLBACK FUNCTION btnExitCallback
DIALOG END hMainDialogHandle
END FUNCTION

'------------------------------------------------------------------------------
CALLBACK FUNCTION ShowDIALOG1Proc()

    SELECT CASE AS LONG CBMSG
        CASE %WM_INITDIALOG
            ' Initialization handler
            lFarmerCOunt=0
            REDIM FarmerData(1000)
            PrepareComport

        CASE %WM_NCACTIVATE
            STATIC hWndSaveFocus AS DWORD
            IF ISFALSE CBWPARAM THEN
                ' Save control focus
                hWndSaveFocus = GetFocus()
            ELSEIF hWndSaveFocus THEN
                ' Restore control focus

                SetFocus(hWndSaveFocus)
                hWndSaveFocus = 0
            END IF

        CASE %WM_COMMAND
            ' Process control notifications
            SELECT CASE AS LONG CBCTL
                CASE %IDC_BTNNEWDATA
'                    IF CBCTLMSG = %BN_CLICKED OR CBCTLMSG = 1 THEN
'                        MSGBOX "%IDC_BTNNEWDATA=" + FORMAT$(%IDC_BTNNEWDATA), _
'                            %MB_TASKMODAL
'                    END IF

                CASE %IDC_BTNEDITDATA
'                    IF CBCTLMSG = %BN_CLICKED OR CBCTLMSG = 1 THEN
'                        MSGBOX "%IDC_BTNEDITDATA=" + _
'                            FORMAT$(%IDC_BTNEDITDATA), %MB_TASKMODAL
'                    END IF

                CASE %IDC_BTNREPORTS
'                    IF CBCTLMSG = %BN_CLICKED OR CBCTLMSG = 1 THEN
'                        MSGBOX "%IDC_BTNREPORTS=" + FORMAT$(%IDC_BTNREPORTS), _
'                            %MB_TASKMODAL
'                    END IF

                CASE %IDC_BTNEXIT
'                    IF CBCTLMSG = %BN_CLICKED OR CBCTLMSG = 1 THEN
'                        MSGBOX "%IDC_BTNEXIT=" + FORMAT$(%IDC_BTNEXIT), _
'                            %MB_TASKMODAL
'                    END IF

            END SELECT
    END SELECT
END FUNCTION
'------------------------------------------------------------------------------

'------------------------------------------------------------------------------
'   ** Dialogs **
'------------------------------------------------------------------------------
FUNCTION ShowDIALOG1(BYVAL hParent AS DWORD) AS LONG
    LOCAL lRslt AS LONG

#PBFORMS BEGIN DIALOG %IDD_DIALOG1->->
    LOCAL hDlg   AS DWORD
    LOCAL hFont1 AS DWORD

    DIALOG NEW hParent, "Milk Data", 276, 97, 319, 174, TO hDlg
    DIALOG  SET COLOR   hDlg, -1, RGB(169, 173, 82)
    CONTROL ADD BUTTON, hDlg, %IDC_BTNNEWDATA, "&New Data", 250, 20, 55, 20,CALL btnNewDataCallback
    CONTROL ADD BUTTON, hDlg, %IDC_BTNEDITDATA, "&Edit Data", 250, 50, 55, 20, CALL btnNewDataCallback
    CONTROL ADD BUTTON, hDlg, %IDC_BTNREPORTS, "&Reports", 250, 80, 55, 20, CALL btnReportsCallback
    CONTROL ADD BUTTON, hDlg, %IDC_BTNEXIT, "E&xit", 250, 110, 55, 20,CALL btnExitCallback
    CONTROL ADD LABEL,  hDlg, %IDC_LABEL1, "  MILK DATA AUTOMATION", 50, 40, _
        170, 65
    CONTROL SET COLOR   hDlg, %IDC_LABEL1, RGB(128, 0, 0), %CYAN
    CONTROL ADD LABEL,   hDlg, %IDC_LABEL10, "Comport Number", 10, 150, 75, 15
    CONTROL ADD TEXTBOX, hDlg, %IDC_TEXTBOX_COMPORT, "1", 110, 150, 25, 15
    CONTROL ADD TEXTBOX, hDlg, %IDC_TEXTBOX_RFID, "", 150, 150, 55, 15

    hFont1 = PBFormsMakeFont("@Adobe Kaiti Std R", 28, 700, %FALSE, %FALSE, _
        %FALSE, %ANSI_CHARSET)

    CONTROL SEND hDlg, %IDC_LABEL1, %WM_SETFONT, hFont1, 0
#PBFORMS END DIALOG

    hMainDialogHandle=hDlg
    lDestinationTextBox=%IDC_TEXTBOX_RFID
    hDestinationFormHandle=hMainDialogHandle

    DIALOG SHOW MODAL hDlg, CALL ShowDIALOG1Proc TO lRslt

#PBFORMS BEGIN CLEANUP %IDD_DIALOG1
    DeleteObject hFont1
#PBFORMS END CLEANUP

    FUNCTION = lRslt
END FUNCTION
'------------------------------------------------------------------------------

                                '----------------------------------------------------------
'FUNCTION StartComms AS LONG
' Function opens comport
' returns 1 if success, 0 if failure
'----------------------------------------------------------
FUNCTION StartComms(lComportNumber AS LONG) AS LONG
LOCAL s1 AS STRING

lComportFile = FREEFILE
s1="COM"+TRIM$(STR$(lCOmportNumber))
COMM OPEN s1 AS #lComportFile

IF ERRCLEAR THEN
   FUNCTION=0
   EXIT FUNCTION     ' Port problem?
END IF

COMM SET #lComportFile, BAUD     = 9600  ' 9600 baud
COMM SET #lComportFile, BYTE     = 8      ' 8 bits
COMM SET #lComportFile, PARITY   = %FALSE ' No parity
COMM SET #lComportFile, STOP     = 0      ' 1 stop bit
COMM SET #lComportFile, TXBUFFER = 4096   ' 4 Kb transmit buffer
COMM SET #lComportFile, RXBUFFER = 4096   ' 4 Kb receive buffer
FUNCTION = 1

END FUNCTION

'----------------------------------------------------------
'FUNCTION EndComms
' Function closes comport
'----------------------------------------------------------
FUNCTION EndComms() AS LONG
LOCAL s1 AS STRING
' Flush the RX buffer & close the port
SLEEP 1000
IF COMM(#lComportFile, RXQUE) THEN
    COMM RECV #lComportFile, COMM(#lComportFile, RXQUE), s1
END IF
COMM CLOSE #lComportFile
END FUNCTION

'----------------------------------------------------------
'FUNCTION PrepareComport
'returns 0- if could not comport'
'        1 if comport could be opened

'----------------------------------------------------------
FUNCTION PrepareComport () AS LONG
LOCAL s1 AS STRING
LOCAL l1,l2 AS LONG


CONTROL GET TEXT hMainDialogHandle,%IDC_TEXTBOX_COMPORT TO s1   ' s1 now has comport number
l1=VAL(s1)
IF l1<1 OR l1>16 THEN
    MSGBOX "Wrong Comport Number",,$AppTitle
    EXIT FUNCTION
END IF
l2=StartComms(l1)
IF l2=0 THEN
    MSGBOX "Error while opening Comport",,$AppTitle
    FUNCTION=0
    EXIT FUNCTION
END IF

'CONTROL GET TEXT hMainDialogHandle,%IDC_TEXTBOX_CARDNUMBER TO s2   ' s1 now has card number
'COMM SEND #lComportFile, s2
'SLEEP 20

FUNCTION=1
END FUNCTION

'----------------------------------------------------------

THREAD FUNCTION RFIDThreadFunction(BYVAL x AS LONG) AS LONG
LOCAL l1,l2 AS LONG
LOCAL s1 AS STRING

LOCAL lTextbox,hForm AS LONG

SLEEP 3000


  ' Thread code goes here
WHILE(1)
    SLEEP 100

    lTextbox=lDestinationTextBox
    hForm=hDestinationFormHandle

    l1=COMM(#lComportFile, RXQUE)
    IF l1>0  THEN
        SLEEP 20
        COMM RECV #lComportFile, COMM(#lComportFile, RXQUE), s1
'        msgbox s1 + " * "+str$(hForm)+ " & "+str$(lTextbox)
        CONTROL SET TEXT hForm,lTextbox,s1
    END IF


LOOP

END FUNCTION

'----------------------------------------------------------
